{"version":3,"file":"static/js/21.5728413a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__jMP46\",\"posts\":\"MyPosts_posts__JYF9g\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__-dTwD\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt='' src=\"https://www.journaldugeek.com/content/uploads/2022/06/sans-titre19.jpg\" />\r\n            { props.message }\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport { TextArea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n// shouldComponentUpdate(nextProps, nextState) {\r\n//     return nextProps !== this.props || nextState !== this.state\r\n// }\r\n    console.log('RENDER')\r\n    let postElements = props.posts.map(p => <Post message={p.post} like={p.likesCount} />)\r\n\r\n    const addPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Enter your text'} name={'newPostText'} component={TextArea} validate={[required, maxLengthCreator(30)]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ZhK74\",\"image\":\"ProfileInfo_image__pZSa2\"};","import { useEffect, useState } from \"react\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, seStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        seStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        seStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport yes from '../../../images/yes.png'\r\nimport not from '../../../images/not.png'\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img alt='' src={props.profile.photos.large} />\r\n                <h2>{props.profile.fullName}</h2>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                <h4>{props.profile.aboutMe}</h4>\r\n                <h3>Статус работы</h3>\r\n                <img className={s.image} alt=\"\" src={props.profile.lookingForAJob === true ? yes : not} />\r\n                <h5>{props.profile.lookingForAJobDescription}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getUserProfile, getProfileStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getProfileStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            // const isAuthUser = async (props) => {\r\n            //     await props.setAuthUser()\r\n          \r\n          \r\n            //     if (!props.isAuth) {\r\n            //       return <Navigate to='/login' />\r\n            //     }\r\n            //   }\r\n          \r\n            //   isAuthUser()\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n"],"names":["props","className","s","alt","src","message","like","MyPosts","React","console","log","postElements","posts","map","p","post","likesCount","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","name","component","TextArea","validate","required","maxLengthCreator","connect","state","profilePage","dispatch","addPostCreator","useState","editMode","setEditMode","status","seStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","fullName","aboutMe","lookingForAJob","yes","not","lookingForAJobDescription","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getProfileStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}